[tool.poetry]
name = "geos-xml-viewer"
version = "1.2.1"
description = "geos-xml-viewer is a Python package dedicated to preprocessing and postpressing of data for the geos simulation framework"
authors = ["Lionel Untereiner <lionel.untereiner@external.totalenergies.com>"]
license = {text = "Apache-2.0"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License ",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Topic :: Scientific/Engineering :: Visualization",
]
readme = "README.md"
keywords = [
    "GEOS",
    "Simulation",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[tool.poetry.dependencies]
python = "^3.10"
pyvista = "^0.42"
lxml = "^4.9"
xsdata = {version = "^24", extras = ["cli"]}
colorcet = "^3.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7"
pytest-cov = "^4"

[tool.poetry.group.tests.dependencies]
mypy = "^1.7"
ruff = "^0"
xmlschema = "^3.0.0"

[tool.poetry.scripts]
geos-viewer = 'geos-xml-viewer.bin.viewer:run'
geos-exporter = 'geos-xml-viewer.bin.exporter:run'
#validate = 'geos-xml-viewer.bin.validate:run'
#xsd = 'geos-xml-viewer.bin.test_xsdata:run'
geos-modifier = 'geos-xml-viewer.bin.modifier:run'
#testCellLocator = 'geos-xml-viewer.bin.testCellLocator:run'
geos-splitter = 'geos-xml-viewer.bin.splitter:run'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear        
    "SIM",  # flake8-simplify        
    "ANN",  # flake8-annotations        
    "C4",   # flake8-comprehensions    
    "I",    # isort        
    "D",    # pydocstyle    
]

ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191", # indentation contains tabs
    "D100",
    "D101",
    "D104",  # Missing docstring in public package in __init__.py files
    "UP007",
]

[tool.ruff.lint.isort]
known-third-party = ["pyvista"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"

# [tool.black]
# line-length = 88
# target-version = ["py310", "py311"]
# include = '\.pyi?$'
# exclude = '''
# /(
#     \.git
#   | \.hg
#   | \.mypy_cache
#   | \.pytest_cache
#   | \.tox
#   | \.venv
#   | _build
#   | buck-out
#   | build
#   | dist
#   | htmlcov
# )/
# '''

# [tool.isort]
# multi_line_output = 3
# atomic = true
# profile = "black"
# line_length = 88
# skip_gitignore = true
# include_trailing_comma = true
# # skip_glob = ["tests"]

[tool.pytest.ini_options]
addopts = ""
console_output_style = "count"
python_classes = "Test"
python_files = "test_*.py"
python_functions = "test*"
testpaths = ["tests"]


[tool.coverage.run]
branch = true
source = ["geos-xml-viewer, PVplugins"]


[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
python_version = "3.11"
mypy_path = "src"
strict = true
# Unreachable blocks have been an issue when compiling mypyc, let's try to avoid 'em in the first place.
warn_unreachable = true
implicit_reexport = true
show_error_codes = true
show_column_numbers = true
exclude = [
    'geos-xml-viewer/algorithms/write_wells.py',
]
